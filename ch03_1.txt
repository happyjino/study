ch03_1 - 변수 선언문
TS도 JS처럼 기본 타입이 있다.
number, string, boolean, object이다.

let, const
let, const 사용 권고, var은 사용하지 않도록 권고
let 변수이름 [=초깃값] / 변경 가능
const 변수이름 = 초깃값 / 변경 불가능! 반드시 초깃값 명시!

타입 주석(type annotation)
타입을 명시하는 것을 타입 주석이라고 한다.
ex) let 변수이름: 타입 [=초깃값] / const 변수이름: 타입 = 초깃값
let은 변경 가능한 변수이지만 타입 주석으로 명시한 타입으로만 바꿀 수 있다!

타입 추론(type inference)
위에서 타입을 명시하는 타입 주석은 생략 가능
그럴 경우 TS 컴파일러는 값을 보고 추론하여 타입을 지정한다! 이를 타입 추론이라고 한다
이후 해당 타입에 대한 값만 저장 가능하다

any 타입
JS와 호환을 위해 any라는 타입을 제공한다.
타입을 any로 명시하면 어떤 타입의 값도 저장할 수 있다!!!

undefined 타입
JS에서 undefined는 값이다.
변수를 초기화하지 않으면 해당 변수는 undefined라는 값을 가진다.
TS에서는 타입이면서 값이다.
ex) let u: undefined = undefined
u = 1을 하면 undefined 오류 발생한다.

any는 모든 타입의 루트 타입, 최상위 타입이고
undefined는 모든 타입의 최하위 타입이다.

템플릿 문자열(templete string)
변수에 담긴 값을 조합해 문자열을 만드는 템플릿 문자열을 제공한다.
`{변수이름}`으로 사용한다.
예시
let count = 10, message = 'Your count';
let result = `${message} is ${count}`;
console.log(result) // Your count is 10
이렇게 된다!



